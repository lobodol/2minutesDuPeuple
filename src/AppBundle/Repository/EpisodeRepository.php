<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Episode;
use Doctrine\ORM\EntityRepository;

/**
 * EpisodeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EpisodeRepository extends EntityRepository
{
    /**
     * Get all episodes applying given filters.
     * @deprecated Will be deleted in favor of elasticsearch query.
     *
     * @param string $sort     : field name to sort by.
     * @param string $order    : order of sorting (ASC or DESC)
     * @param string $fulltext : string to look for.
     * @return array
     */
    public function getEpisodes($sort = 'title', $order = 'ASC', $fulltext = '')
    {
        $queryBase = $this
            ->createQueryBuilder('e')
            ->leftJoin('e.category', 'c');

        if (!empty($fulltext)) {
            $queryBase
                ->where('e.title LIKE :fulltext')
                ->orWhere('e.keywords LIKE :fulltext')
                ->orWhere('c.name LIKE :fulltext')
                ->setParameter('fulltext', "%$fulltext%");
        }

        if (property_exists(Episode::class, $sort) && in_array($order, ['ASC', 'DESC'])) {
            if ($sort == 'category') {
                $queryBase->orderBy('c.name', $order);
            } else {
                $queryBase->orderBy('e.'.$sort, $order);
            }
        }

        return $queryBase->getQuery()->getResult();
    }
}
